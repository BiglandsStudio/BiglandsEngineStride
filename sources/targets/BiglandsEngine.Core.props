<!-- Build file pre-included by all BiglandsEngine projects -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Setup this part according to your project if you want your .csproj to compile individually without going through the .sln file -->
  <PropertyGroup>
    <SolutionName Condition=" '$(SolutionName)' == '' ">BiglandsEngine</SolutionName>
  </PropertyGroup>

  <!-- Setup BiglandsEnginePlatform according to current TargetFramework -->
  <PropertyGroup>
    <BiglandsEngineFramework>net8.0</BiglandsEngineFramework>
    <BiglandsEngineFrameworkWindows>net8.0-windows7.0</BiglandsEngineFrameworkWindows>
    <BiglandsEngineFrameworkAndroid>net8.0-android</BiglandsEngineFrameworkAndroid>
    <BiglandsEngineFrameworkiOS>net8.0-ios</BiglandsEngineFrameworkiOS>
    <BiglandsEngineFrameworkUWP>uap10.0.16299</BiglandsEngineFrameworkUWP>

    <!-- Default values -->
    <BiglandsEnginePlatformOriginal>$(BiglandsEnginePlatform)</BiglandsEnginePlatformOriginal>
    <BiglandsEnginePlatform Condition=" $(TargetFramework.StartsWith('net')) ">Windows</BiglandsEnginePlatform>
    <BiglandsEnginePlatform Condition=" $(TargetFramework.StartsWith('net')) And $(RuntimeIdentifier.StartsWith('linux')) ">Linux</BiglandsEnginePlatform>
    <BiglandsEnginePlatform Condition=" $(TargetFramework.StartsWith('net')) And $(RuntimeIdentifier.StartsWith('osx')) ">macOS</BiglandsEnginePlatform>
    <BiglandsEnginePlatform Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkUWP)' ">UWP</BiglandsEnginePlatform>
    <BiglandsEnginePlatform Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkAndroid)' ">Android</BiglandsEnginePlatform>
    <BiglandsEnginePlatform Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkiOS)' ">iOS</BiglandsEnginePlatform>
    <!-- Default fallback -->
    <BiglandsEnginePlatform Condition=" '$(BiglandsEnginePlatform)' == '' ">Windows</BiglandsEnginePlatform>

    <BiglandsEnginePlatformFullName Condition="'$(BiglandsEnginePlatformFullName)' == ''">$(BiglandsEnginePlatform)</BiglandsEnginePlatformFullName>

    <BiglandsEnginePlatformDeps Condition=" '$(TargetFramework)' == '$(BiglandsEngineFramework)' Or '$(TargetFramework)' == '$(BiglandsEngineFrameworkWindows)' ">dotnet</BiglandsEnginePlatformDeps>
    <BiglandsEnginePlatformDeps Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkUWP)' ">UWP</BiglandsEnginePlatformDeps>
    <BiglandsEnginePlatformDeps Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkAndroid)' ">Android</BiglandsEnginePlatformDeps>
    <BiglandsEnginePlatformDeps Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkiOS)' ">iOS</BiglandsEnginePlatformDeps>
  </PropertyGroup>

  <!--Import Local Pre Settings for the solution being loaded -->
  <Import Project="$(MSBuildThisFileDirectory)..\..\build\$(SolutionName).Build.props" Condition="Exists('$(MSBuildThisFileDirectory)..\..\build\$(SolutionName).Build.props')" />
  <Import Project="$(MSBuildThisFileDirectory)..\..\build\BiglandsEngine.Core.Build.props" Condition="Exists('$(MSBuildThisFileDirectory)..\..\build\BiglandsEngine.Core.Build.props')" />
  <Import Project="$(MSBuildThisFileDirectory)BiglandsEngine.Core.TargetFrameworks.Editor.props" />
  
  <!-- 
    Settings BiglandsEnginePlatform specific
  -->
  <PropertyGroup>
    <BiglandsEnginePlatformDefines>BiglandsEngine_PLATFORM_DESKTOP;BiglandsEngine_PLATFORM_WINDOWS;BiglandsEngine_PLATFORM_WINDOWS_DESKTOP</BiglandsEnginePlatformDefines>

    <!-- Note: ideally we would split using ItemGroup but then PropertyGroup are not properly evaluated if they contain ItemGroup (unless using Targets) -->
    <BiglandsEnginePlatforms Condition="'$(BiglandsEnginePlatforms)' == ''">Windows</BiglandsEnginePlatforms>
    <!-- Let's support escaped MSBuild variables, in case it was sent from BiglandsEngine.build (not sure why but I couldn't make it work properly when passing to MSBuild.Properties) -->
    <BiglandsEnginePlatforms>$([MSBuild]::Unescape('$(BiglandsEnginePlatforms)'))</BiglandsEnginePlatforms>
    <_BiglandsEnginePlatforms>;$(BiglandsEnginePlatforms);</_BiglandsEnginePlatforms>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)' == '$(BiglandsEngineFrameworkUWP)'">
    <!-- Fixes for GetPackagingOutputs (note: not sure if still necessary) -->
    <WindowsAppContainer>false</WindowsAppContainer>
    <AppxPackage>false</AppxPackage>
    <Platform>AnyCPU</Platform>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(BiglandsEngineRuntime)' == 'true' ">  
    <EnableWindowsTargeting>true</EnableWindowsTargeting>
    <!-- Add net8.0 no matter what (needed for references) -->
    <BiglandsEngineRuntimeTargetFrameworks>net8.0</BiglandsEngineRuntimeTargetFrameworks>
    <BiglandsEngineRuntimeTargetFrameworks Condition="$(_BiglandsEnginePlatforms.Contains(';Windows;')) And '$(BiglandsEngineExplicitWindowsRuntime)' == 'true'">$(BiglandsEngineRuntimeTargetFrameworks);net8.0-windows7.0</BiglandsEngineRuntimeTargetFrameworks>
    <BiglandsEngineRuntimeTargetFrameworks Condition="$(_BiglandsEnginePlatforms.Contains(';UWP;'))">$(BiglandsEngineRuntimeTargetFrameworks);uap10.0.16299</BiglandsEngineRuntimeTargetFrameworks>
    <BiglandsEngineRuntimeTargetFrameworks Condition="$(_BiglandsEnginePlatforms.Contains(';Android;'))">$(BiglandsEngineRuntimeTargetFrameworks);net8.0-android</BiglandsEngineRuntimeTargetFrameworks>
    <BiglandsEngineRuntimeTargetFrameworks Condition="$(_BiglandsEnginePlatforms.Contains(';iOS;'))">$(BiglandsEngineRuntimeTargetFrameworks);net8.0-ios</BiglandsEngineRuntimeTargetFrameworks>

    <BiglandsEngineRuntimeTargetFrameworks>$([MSBuild]::Unescape($(BiglandsEngineRuntimeTargetFrameworks.Trim(';'))))</BiglandsEngineRuntimeTargetFrameworks>

    <TargetFrameworks>$(BiglandsEngineRuntimeTargetFrameworks)</TargetFrameworks>

  </PropertyGroup>

  <!-- Force a full Build & Pack if dependency was only built with a single TargetFramework (which would set IsInnerBuild and skip any Pack logic)
       This is only a problem when building from command line, Visual Studio builds each project completely.
       Recursion is automatically avoided by MSBuild not rebuilding same target
       (we have to be careful to not introduce new global variables otherwise build becomes non-deterministic). -->
  <Target Name="_BiglandsEngineTriggerPackOnInnerBuild"
        BeforeTargets="CoreCompile"
        Condition="'$(BuildingInsideVisualStudio)' != 'true' And '$(GeneratePackageOnBuild)' == 'true'">
    <MSBuild Projects="@(_MSBuildProjectReferenceExistent)"
             Condition="'%(_MSBuildProjectReferenceExistent.SetTargetFramework)' != ''"
             BuildInParallel="$(BuildInParallel)"
             Targets="Build;Pack"
             RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove);TargetFramework;BiglandsEngineGraphicsApi">
    </MSBuild>
  </Target>

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <GenerateProjectSpecificOutputFolder>false</GenerateProjectSpecificOutputFolder>

    <!-- Defines the language of the project being compiled CSharp or Cpp - defined by default to CSharp, must be overriden to Cpp in a Cpp project -->
    <BiglandsEngineProjectType Condition="'$(MSBuildProjectExtension)' == '.vcxproj'">Cpp</BiglandsEngineProjectType>
    <BiglandsEngineProjectType Condition="'$(BiglandsEngineProjectType)' == ''">CSharp</BiglandsEngineProjectType>

    <!-- Flag used per-project settings to specify that it should only be compiled on Windows Desktop-->
    <BiglandsEngineWindowsOnly Condition="'$(BiglandsEngineWindowsOnly)' == ''">false</BiglandsEngineWindowsOnly>

    <BiglandsEngineSdkTargets Condition="'$(BiglandsEngineSdkTargets)' == ''">$(MSBuildThisFileDirectory)BiglandsEngine.Core.targets</BiglandsEngineSdkTargets>
  </PropertyGroup>

  <!-- Ensure appropriate Solution Platform are available -->
  <Choose>
    <When  Condition=" '$(BiglandsEnginePlatform)' == 'Android' ">
      <PropertyGroup Condition=" '$(Platform)' == 'Android' "/>
    </When>
    <When  Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkiOS)' ">
      <PropertyGroup Condition=" '$(Platform)' == 'iPhone' "/>
      <PropertyGroup Condition=" '$(Platform)' == 'iPhoneSimulator' "/>
    </When>
  </Choose>

  <Import Project="$(MSBuildThisFileDirectory)BiglandsEngine.PackageVersion.targets"/>

  <!-- Sdk settings -->
  <PropertyGroup>
    <!-- If we don't set it, default targets will add PlatformName in some cases -->
    <BaseOutputPath>bin\</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)$(Configuration)\</OutputPath>
    <BaseIntermediateOutputPath>obj\</BaseIntermediateOutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
  </PropertyGroup>

  <!-- Default values -->
  <PropertyGroup>
    <BiglandsEngineAssemblyProcessor Condition="'$(BiglandsEngineAssemblyProcessor)' == ''">false</BiglandsEngineAssemblyProcessor>
    <BiglandsEngineAssemblyProcessorOptions Condition="'$(BiglandsEngineAssemblyProcessorOptions)' == ''">--auto-notify-property --auto-module-initializer --serialization</BiglandsEngineAssemblyProcessorOptions>
  </PropertyGroup>

  <!-- 
    Global Settings per project
  -->
  <PropertyGroup>
    <BiglandsEngineCommonDependenciesDir Condition="'$(BiglandsEngineCommonDependenciesDir)' == ''">$(MSBuildThisFileDirectory)..\..\deps\</BiglandsEngineCommonDependenciesDir>
    <BiglandsEngineCommonDependenciesDir Condition="'$(BiglandsEngineCommonDependenciesDir)' != '' and !HasTrailingSlash('$(BiglandsEngineCommonDependenciesDir)')">$(BiglandsEngineCommonDependenciesDir)\</BiglandsEngineCommonDependenciesDir>
    <ErrorReport>prompt</ErrorReport>
    <FileAlignment>512</FileAlignment>
    <ValidateExecutableReferencesMatchSelfContained>false</ValidateExecutableReferencesMatchSelfContained>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFramework)' Or '$(TargetFramework)' == '$(BiglandsEngineFrameworkWindows)' ">
    <BiglandsEnginePlatformDefines>BiglandsEngine_PLATFORM_DESKTOP</BiglandsEnginePlatformDefines>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkUWP)' ">
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <BiglandsEnginePlatformDefines>BiglandsEngine_PLATFORM_WINDOWS;BiglandsEngine_PLATFORM_UWP</BiglandsEnginePlatformDefines>
    <ExtrasUwpMetaPackageVersion>6.2.12</ExtrasUwpMetaPackageVersion>
    <TargetPlatformVersion>$([Microsoft.Build.Utilities.ToolLocationHelper]::GetLatestSDKTargetPlatformVersion('Windows', '10.0'))</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <GenerateLibraryLayout>false</GenerateLibraryLayout>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkAndroid)' ">
    <BiglandsEnginePlatformDefines>BiglandsEngine_PLATFORM_MONO_MOBILE;BiglandsEngine_PLATFORM_ANDROID</BiglandsEnginePlatformDefines>
    <AndroidStoreUncompressedFileExtensions />
    <MandroidI18n />
    <!-- Avoid Xamarin.Android.Common.targets(519,3): error MSB4044: The "FilterAssemblies" task was not given a value for the required parameter "DesignTimeBuild". -->
    <DesignTimeBuild Condition="'$(DesignTimeBuild)' == ''">False</DesignTimeBuild>
    <!-- Use AssemblyName rather than RootNamespace for Resource class otherwise it might clash between some assemblies (i.e. BiglandsEngine and BiglandsEngine.Engine) -->
    <AndroidResgenNamespace>$(AssemblyName)</AndroidResgenNamespace>
    <!-- Needs to be set to 21 as long as generated entry point projects are - otherwise user gets a lot of build warnings -->
    <SupportedOSPlatformVersion>21</SupportedOSPlatformVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkAndroid)' And '$(OutputType)' == 'Exe' ">
    <AndroidApplication>true</AndroidApplication>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkAndroid)' And '$(Configuration)' == 'Debug' ">
    <AndroidUseSharedRuntime>True</AndroidUseSharedRuntime>
    <AndroidLinkMode>None</AndroidLinkMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkAndroid)' And '$(Configuration)' == 'Release' ">
    <AndroidUseSharedRuntime>False</AndroidUseSharedRuntime>
    <AndroidLinkMode>SdkOnly</AndroidLinkMode>
  </PropertyGroup>
  <!-- Workaround for https://github.com/xamarin/xamarin-android/issues/1235 -->
  <Target Name="_FixupLibraryProjectsEmbeddedResource" AfterTargets="_AddLibraryProjectsEmbeddedResourceToProject">
    <ItemGroup>
      <_LibraryProjectsEmbeddedResource Include="@(EmbeddedResource)" Condition="'%(Identity)' == '$(IntermediateOutputPath)__AndroidLibraryProjects__.zip'"/>
      <EmbeddedResource Remove="@(_LibraryProjectsEmbeddedResource)"/>
      <EmbeddedResource Include="@(_LibraryProjectsEmbeddedResource)">
        <LogicalName>__AndroidLibraryProjects__.zip</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkiOS)' ">
    <Platform Condition=" '$(Platform)' == '' ">iPhone</Platform>
    <BiglandsEnginePlatformDefines>BiglandsEngine_PLATFORM_MONO_MOBILE;BiglandsEngine_PLATFORM_IOS</BiglandsEnginePlatformDefines>
    <IPhoneResourcePrefix>Resources</IPhoneResourcePrefix>
  </PropertyGroup>

  <Choose>
    <When Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkUWP)' ">
      <ItemGroup>
        <Reference Include="System" />
        <Reference Include="System.Core" />
        <Reference Include="System.Xml" />
        <Reference Include="System.Xml.Linq" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- Create empty project platform configuration so that MSBuild and Visual Studio Configuration Manager know about it -->
  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkiOS)' And '$(Configuration)|$(Platform)' == 'Debug|iPhone' "/>
  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkiOS)' And '$(Configuration)|$(Platform)' == 'Release|iPhone' "/>
  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkiOS)' And '$(Configuration)|$(Platform)' == 'Debug|iPhoneSimulator' "/>
  <PropertyGroup Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkiOS)' And '$(Configuration)|$(Platform)' == 'Release|iPhoneSimulator' "/>

  <!-- 
    Settings BiglandsEngineNETRuntime specific
  -->
  <PropertyGroup Condition="$(TargetFramework.StartsWith('net8'))">
    <BiglandsEngineNETRuntimeDefines>BiglandsEngine_RUNTIME_CORECLR</BiglandsEngineNETRuntimeDefines>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants>$(BiglandsEnginePlatformDefines);$(DefineConstants)</DefineConstants>
    <DefineConstants Condition="'$(BiglandsEngineNETRuntimeDefines)' != ''">$(DefineConstants);$(BiglandsEngineNETRuntimeDefines)</DefineConstants>
    <DefineConstants Condition="'$(BiglandsEnginePackageBuild)' == 'true'">$(DefineConstants);BiglandsEngine_PACKAGE_BUILD</DefineConstants>
  </PropertyGroup>

  <!-- SourceLink -->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Condition="'$(BiglandsEngineProjectType)' == 'CSharp'" PrivateAssets="All"/>
  </ItemGroup>

  <!-- Copy the libcore.a and libfreetype.a libraries to the project root directory for future native link. -->
  <Target Name="CopyBiglandsEngineNativeLibraries" Condition=" '$(TargetFramework)' == '$(BiglandsEngineFrameworkiOS)' and '$(OutputType)' == 'Exe'">
  </Target>

  <!-- Used by BiglandsEngine.build to detect if unit tests prefer to run in 32 or 64 bits (note: it's a copy of BiglandsEngine.UnitTests.targets one because some unit tests import BiglandsEngine.Core.props rather than BiglandsEngine.UnitTests.props) -->
  <Target Name="_BiglandsEngineAfterGetTargetPathWithTargetPlatformMoniker" AfterTargets="GetTargetPathWithTargetPlatformMoniker">
    <ItemGroup>
      <TargetPathWithTargetPlatformMoniker Update="$(TargetPath)">
        <PlatformTarget>$(PlatformTarget)</PlatformTarget>
      </TargetPathWithTargetPlatformMoniker>
    </ItemGroup>
  </Target>

  <!-- Include BiglandsEngine analyzer/code generator -->
  <Import Project="$(MSBuildThisFileDirectory)BiglandsEngine.Core.CompilerServices.props"/>

  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" Condition="'$(BiglandsEngineProjectType)' != 'Cpp'" />

</Project>
